<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Інструкція користувача
1.	Компоненти ПЗ
Програму розроблено на мові програмування C++у середовищі розробки Microsoft Visual Studio і може експлуатуватися під управлінням сімейства операційних систем Windows. Під час проектування підсистем відбувалося поєднання об’єктно-орієнтованого підходу до програмування з процедурно-орієнтованим.
Всі структури та методи документувались інформаційно і семантично.
2.	Встановлення ПЗ
Для роботи програми необхідно запустити на виконання файл Drones.exe.
3.	Системні вимоги
Програма потребує оперативної пам’яті не менше 256 МБ та об’єм вільної пам’яті не менше 5МБ.
Для коректної роботи пакету необхідна користувацька машина з процесором не менше 250 MHz.
4.	Базові функції ПЗ
·	Створення нової таблиці
Для опрацювання користувацького списку дронів на панелі інструментів виберіть пункт Файл-&gt;Новий. Попередньо опрацьовувані дані знищуються.
·	Відкриття файлу
Для додавання користувацького списку дронів до вже існуючого на панелі інструментів виберіть пункт Файл-&gt;Відкрити. Або скористайтесь відповідною кнопкою у вікні програми.
·	Додавання нового дрона
Для того, щоб додати до списку нового дрона, на панелі інструментів виберіть пункт Редагувати-&gt;Додати, введіть про нього необхідні дані у вікні, що з’явилося, та натисніть кнопку на формі Додати.
Також можна скористатись відповідною кнопкою у вікні програми.
Для закриття вікна, натисніть кнопку Закрити.
·	Сортування списку дронів
Для сортування списку оберіть критерій сортування з випадаючого списку у пункті Фільтр-&gt;Відсортувати.
·	Результат групування по моделях які мають результат «Статус» - «успішне повернення» та найкраще значення - «Швидкість»
Для цього оберіть на панелі інструментів пункт Фільтр-&gt;Успішне повернення та найкраща швидкість.
·	Визначення моделей, які мають приблизно однаковий результат за показником «Висота» з відхиленням 7,359%
Для цього на панелі інструментів оберіть пункт Фільтр-&gt;Однакова висота з відхиленням 7,359%. 
·	Визначення середнійього результату «Дистанція» та знаходження операторів, у яких результат «Статус» - «потрачено», та визначення відхилення їх результату «Статус» від середнього значення 
Для цього на панелі інструментів оберіть пункт Функції-&gt;Середній результат дистанція та статус втрачено. 
·	Виведення операторів, у яких загальний результат буде найкращим
Для цього на панелі інструментів оберіть пункт Функції-&gt;Найкращий результат. 
·	Збереження списку у файл
Для цього на панелі інструментів оберіть пункт Файл-&gt;Зберегти як... або скористайтесь відповідною кнопкою у вікні програми.
·	Інструкція користувача
Щоб отримати інструкцію потрібно на панелі інструментів вибрати пункт Довідка-&gt;Інструкція
·	Про програму
Детальніше про програму можна дізнатися при виборі пункту Довідка-&gt; Про програму.
</value>
  </data>
</root>